// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Unit {
  id   Int    @id @default(autoincrement())
  name String
  code String @unique

  zodiacId    Int
  zodiac      Zodiac    @relation(fields: [zodiacId], references: [id])
  attributeId Int
  attribute   Attribute @relation(fields: [attributeId], references: [id])
  rarityId    Int
  rarity      Rarity    @relation(fields: [rarityId], references: [id])
  skills      Skill[]
}

model Zodiac {
  id   Int    @id @default(autoincrement())
  name String

  units      Unit[]
  catalysts  Catalyst[]
  awakenings Awakening[]
}

model Skill {
  id   Int    @id @default(autoincrement())
  name String
  code String @unique
  type Int

  unitId Int
  unit   Unit @relation(fields: [unitId], references: [id])

  enhancements Enhancement[]
}

model Enhancement {
  id       Int  @id @default(autoincrement())
  level    Int
  gold     Int
  molagara Int?
  stigma   Int?

  skillId Int
  skill   Skill @relation(fields: [skillId], references: [id])


}

model Catalyst {
  id Int @id @default(autoincrement())

  name            String
  code            String  @unique
  isEpic          Boolean
  isSkillMaterial Boolean

  zodiacId      Int
  zodiac        Zodiac     @relation(fields: [zodiacId], references: [id])
  // Drop
  dropLocations Drop[]     @relation(references: [id])
  // Region
  shopLocations ShopItem[]
}

model Drop {
  id Int @id @default(autoincrement())

  stageId   Int
  stage     Stage      @relation(fields: [stageId], references: [id])
  catalystId  Int
  catalyst Catalyst[] @relation(fields: [catalystId], references: [id])
}

model Stage {
  id       Int    @id @default(autoincrement())
  instance String
  name     String
  points   Int
  energy   Int

  drops    Drop[]
  regionId Int
  region   Region @relation(fields: [regionId], references: [id])
}

model ShopItem {
  catalystId Int
  regionId   Int
  price      Int

  catalyst Catalyst @relation(fields: [catalystId], references: [id])
  region   Region   @relation(fields: [regionId], references: [id])
  @@id([catalystId, regionId])
}

model Region {
  id      Int    @id @default(autoincrement())
  episode String
  region  String
  name    String

  catalysts ShopItem[]
  stages    Stage[]
}

model Awakening {
  id            Int  @id @default(autoincrement())
  // This table more accurately represents the "cost" to get to this state
  // e.g Getting "state: 1" requires the materials in its row
  state         Int
  catalystCount Int?


  rarityId    Int
  rarity      Rarity    @relation(fields: [rarityId], references: [id])
  attributeId Int
  attribute   Attribute @relation(fields: [attributeId], references: [id])

  runeCosts RuneCost[]
  Zodiac    Zodiac?    @relation(fields: [zodiacId], references: [id])
  zodiacId  Int?
}

model Rune {
  id   Int    @id @default(autoincrement())
  name String
  code String

  runeCosts RuneCost[]
}

model RuneCost {
  runeId      Int
  awakeningId Int
  count       Int

  rune      Rune      @relation(fields: [runeId], references: [id])
  awakening Awakening @relation(fields: [awakeningId], references: [id])
  @@id([runeId, awakeningId])
}

model Rarity {
  id    Int @id @default(autoincrement())
  value Int

  awakenings Awakening[]
  units      Unit[]
}

model Attribute {
  id   Int    @id @default(autoincrement())
  name String

  awakenings Awakening[]
  units      Unit[]
}
